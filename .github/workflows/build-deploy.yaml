name: Build & Deploy

on: 
  pull_request:
    branches:
      - main

env:
  GODOT_VERSION: '4.3'
  GODOT_RELEASE: stable

permissions:
  contents: read
  pages: write
  packages: read
  id-token: write

jobs:
  lint:
    name: Lint and Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Install GD Toolkit
        run: pip3 install "gdtoolkit==4.*"
      
      - name: Run GdLint
        run: gdlint ./
      
      - name: Run GdFormat
        run: gdformat ./ -s 2 -d
  export:
    name: Export for ${{ matrix.targetPlatform.name }}
    runs-on: ubuntu-latest
    needs: lint
    # runs-on: [self-hosted, "${{ matrix.targetPlatform.name }}"]
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: [
          { name: win64, path: build.exe },
          { name: html5, path: index.html }
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - name: Setup Godot
        uses: ./.github/actions/setup-godot
        with:
          godot-version: ${{env.GODOT_VERSION}}
          godot-release: ${{ env.GODOT_RELEASE }}
      - name: Run gd-plug
        run: |
          ${GITHUB_WORKSPACE}/godot --headless -s plug.gd install
      - name: Export Godot project
        run: |
          mkdir -vp build-${{ matrix.targetPlatform.name }}
          ${GITHUB_WORKSPACE}/godot --headless --export-release ${{ matrix.targetPlatform.name }} build-${{ matrix.targetPlatform.name }}/${{ matrix.targetPlatform.path }}
      - name: Generate artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.targetPlatform.name }}
          path: build-${{ matrix.targetPlatform.name }}
          retention-days: 1
 
  deploy:
    name: Deploy on Github Pages
    needs: export
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    steps: 
      - name: Download export artifacts
        uses: actions/download-artifact@v4
        with: 
          name: build-html5
      - name: Add coi-service-worker
        run: |
          git clone https://github.com/gzuidhof/coi-serviceworker.git
          mv coi-serviceworker/coi-serviceworker.min.js ./coi-serviceworker.min.js
          rm -R coi-serviceworker
          ls -a
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
